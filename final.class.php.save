<?php 
class final_rest
{



/**
 * @api  /api/v1/setTemp/
 * @apiName setTemp
 * @apiDescription Add remote temperature measurement
 *
 * @apiParam {string} location
 * @apiParam {String} sensor
 * @apiParam {double} value
 *
 * @apiSuccess {Integer} status
 * @apiSuccess {string} message
 *
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *              "status":0,
 *              "message": ""
 *     }
 *
 * @apiError Invalid data types
 *
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 200 OK
 *     {
 *              "status":1,
 *              "message":"Error Message"
 *     }
 *
 */
        public static function setTemp ($location, $sensor, $value)

        {
                if (!is_numeric($value)) {
                        $retData["status"]=1;
                        $retData["message"]="'$value' is not numeric";
                }
                else {
                        try {
                                EXEC_SQL("insert into temperature (location, sensor, value, date) values (?,?,?,CURRENT_TIMESTAMP)",$location, $sensor, $value);
                                $retData["status"]=0;
				$retData["message"]="insert of '$value' for location: '$location' and sensor '$sensor' accepted";
                        }
                        catch  (Exception $e) {
                                $retData["status"]=1;
                                $retData["message"]=$e->getMessage();
                        }
                }

                return json_encode ($retData);
        }

	public static function getProduct ($category, $subcategory, $id)

	{
			try {
				$retData["result"] = GET_SQL("select * from product where category like ? and subcategory like ? and (product_id = ? or ? = '0') order by description", $category,$subcategory,$id,$id);
				$retData["status"]=0;
				$retData["message"]="select from product: category '$category' and subcategory '$subcategory' and id '$id'  found";
			}
			catch  (Exception $e) {
				$retData["status"]=1;
				$retData["message"]=$e->getMessage();
			}

		return json_encode ($retData);
	}

	public static function createShoppingCart ()

	{
		try {
			EXEC_SQL("insert into 'shoppingCart' (cartID, closedDateTime) values (?,NULL)");
			$retData["status"]=0;
			//how do we get it to return cartID
			$retData["message"]="cart successfully created with cartID: 'getcartID()'";
		}
		catch (Exception $e) {
			$retData["status"]=1;
			$retData["message"]=$e->getMessage(); 
		}
		return json_encode ($retData);
	}

	public static function addItemToCart ($cartID, $productID, $qty)

	{
		if ($cartID.getclosedDateTime() != NULL) { // no clue how to get that info
			$retData["status"]=1;
			$retData["message"]="cart was closed";
		}
		else {
			try {
				EXEC_SQL("insert into 'cartItems' (itemID, cartID, productID, qty)
} // closes class

